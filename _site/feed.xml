<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Miki Ishijima Blog</title>
		<description>趣味のゲームやプログラミング、レビューなど個人イシジマミキにより近しい内容を書いています。普遍的なデザインの話はThe Marsknowledge Blogで。</description>
		<link>http://localhost:3000//</link>
		<atom:link href="http://localhost:3000//feed.xml" rel="self" type="application/rss+xml" />
		<pubDate>Tue, 03 May 2016 01:24:17 +0900</pubDate>
		<lastBuildDate>Tue, 03 May 2016 01:24:17 +0900</lastBuildDate>
		<generator>Jekyll v3.1.2</generator>
		
			<item>
				<title>Floaty Color Clock開発で得られたこと</title>
				<description>&lt;p&gt;「クリックでふわっと動くアレやコレ」を作ってみたい。そんな思いから着手したFloaty Color Clockですが、ついでで開発しはじめた天気予報機能が難しく思わぬ方向に…。この記事は開発中の思い出話を書いていきます。&lt;/p&gt;

&lt;h2 id=&quot;undefind&quot;&gt;Undefindの嵐&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/woopsdez/omikujigohan&quot;&gt;7年前のPHPコード&lt;/a&gt;、&lt;a href=&quot;http://omikujigohan.woopsdez.jp/&quot;&gt;おみくじゴハン&lt;/a&gt;のリファクタリング、そして&lt;a href=&quot;http://woopsdez.github.io/floaty-color-clock/&quot;&gt;Floaty Color Clock&lt;/a&gt;の開発。&lt;/p&gt;

&lt;p&gt;どちらもNotice, undefindの嵐でした。わたしが良く怒られたケースはこちら。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fuga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hoge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fuga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// fugaがtrueじゃないとif文の中を通らない&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hoge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//するとhogeはここで初出になる&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;if文の中で使ったあと、後に続く処理でしれっと変数を呼び出していると怒られるのですね。&lt;/p&gt;

&lt;p&gt;じゃあ、ちゃんとif文を経由させたり、if文を経由しなくても値が入ってるようにすれば良いのでは？と、グローバルで変数に初期値を入れておいたり、isset()やundefindチェックをしたりしています。&lt;/p&gt;

&lt;p&gt;HTML内で呼び出すこともあるので、長ったらしい文になるのは避けたいところ。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- これが --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hoge&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- こうなってしまう --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hoge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hoge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section&quot;&gt;関数内で完結させる&lt;/h2&gt;
&lt;p&gt;プログラミングの師匠(&lt;a href=&quot;http://blog.tai2.net/&quot;&gt;@tai2&lt;/a&gt;)に、アドバイスを求めたところ下記の返答をいただきました。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;「グローバルで変数を定義し、関数内でもやりとりさせてしまっているのをやめ、関数で完結させる。値は引数として受け渡しするといい。」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なるほどなるほど。&lt;/p&gt;

&lt;p&gt;マインクラフト内でのLuaプログラミングでは、それができていたのに今回の開発ではしっちゃかめっちゃかになってしまっていました。&lt;/p&gt;

&lt;p&gt;自分のスキルより難しい実装が入ると、コード全体の把握がおろそかになってしまうのがわたしの悪いクセ。&lt;/p&gt;

&lt;div class=&quot;container&quot;&gt;
	&lt;a href=&quot;http://www.amazon.co.jp/gp/product/4569792189/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4569792189&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51wBC4deA4L._M500_.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
	&lt;div class=&quot;reference&quot;&gt;
		&lt;strong&gt;右京さんの口癖&lt;/strong&gt;
		&lt;p&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;ユーザー設定がある場合の初期値のやりくりが苦手&lt;/h2&gt;
&lt;p&gt;「二回目に処理するとき、一回目に保存しておいた値があるならそちらを利用する。」というのがうまく書けません。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 初期値&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;undefind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//ユーザーが設定した値があるかどうか&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//あれば、初期値として扱う&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;こんな感じで書けばいいのですよね。いまもですが、分岐の流れ、今はどこの処理に辿りついたかを理解するのに時間がかかります。&lt;/p&gt;

&lt;div class=&quot;container&quot;&gt;
	&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;/content/images/2016/05/undefinde-variables/702167001386764518.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
	&lt;div class=&quot;reference&quot;&gt;
		&lt;strong&gt;映画のようにはなかなかいかない&lt;/strong&gt;
		&lt;p&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;時刻に合わせて回転する画像&lt;/h2&gt;
&lt;p&gt;他の方から見れば簡単なことですが、算数が苦手なわたしは「よくこの実装を思いつけたな」と有頂天になっています。&lt;/p&gt;

&lt;p&gt;小学校で習った「割合の公式」の出番です!&lt;/p&gt;

&lt;blockquote&gt;

  &lt;ul&gt;
    &lt;li&gt;「割合」＝「比べる値」÷「もとの値」&lt;/li&gt;
    &lt;li&gt;「比べる値」＝「もとの値」×「割合」&lt;/li&gt;
    &lt;li&gt;「もとの値」＝「比べる値」÷「割合」&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;まず、24時間を円とみなして、現在時刻ではどの角度にいるのかを割り出す必要があります。&lt;/p&gt;

&lt;p&gt;必要な値として&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;24時間の秒数(86400s)&lt;/li&gt;
  &lt;li&gt;0時から現在時刻までの秒数&lt;/li&gt;
  &lt;li&gt;24時間を100%とした時の現在時刻の割合&lt;/li&gt;
  &lt;li&gt;円の角度 360°&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が分かればあとは&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_nowsec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86400&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//割合を求める&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nowdeg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_per&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 360°中 per%は何°になるかが分かる&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;という式で求められるのですね。&lt;/p&gt;

&lt;p&gt;あとはこの値を、jQueryにてcssのプロパティにセットしていけばOKです。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.bg image&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;transform&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;rotate(&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nowdeg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;deg)&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上記がhtml内で毎秒実行される訳です。&lt;/p&gt;

&lt;p&gt;cssの値を変更するのだから、cssファイルの書き換えを行うのでは？それにはどうしたら？と疑問に思ってましたが、jsでhtml内にインラインで書いちゃえばいいのですよね。&lt;/p&gt;

&lt;p&gt;すでに知っている知識でも、いっぱいいっぱいになるとこぼれ落ちちゃう。&lt;/p&gt;

&lt;h2 id=&quot;qiita&quot;&gt;Qiitaに投稿しています。&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/05/undefinde-variables/qiita-woopsdez.png&quot; alt=&quot;http://qiita.com/woopsdez&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/woopsdez/items/bc6108460de13d668e78&quot;&gt;Chromeエクステンションで、どうしてもJSONPでやりとりしないといけない場合の対処 - Qiita&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/woopsdez/items/cb0e59245d4ee13e8ae5&quot;&gt;gulpでのgit操作 commit messageをコマンドライン引数で渡そう - Qiita&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/woopsdez/items/cc2b64800a6de3112920&quot;&gt;jekyllで構築したサイト、本番へアップしたらcssが適用されない場合に試しておきたいbaseurlの便利な変更の仕方。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ぜひチェックしてくださいな。&lt;/p&gt;
</description>
				<pubDate>Mon, 02 May 2016 00:00:00 +0900</pubDate>
				<link>http://localhost:3000//private-works/2016/05/02/undefinde-variables/</link>
				<guid isPermaLink="true">http://localhost:3000//private-works/2016/05/02/undefinde-variables/</guid>
				
				
					<category>private-works</category>
				
			</item>
		
			<item>
				<title>プライベートワークの重要さ</title>
				<description>&lt;h2 id=&quot;section&quot;&gt;と、その前に&lt;/h2&gt;
&lt;p&gt;プライベートワークの良いところは、もちろん学習に直結しているところです。&lt;/p&gt;

&lt;p&gt;しかし、副産物もまたおいしい。このブログの構築時にも検索して見つからなかったノウハウはＱiitaに投稿していますが、他の人がストックしてくれるとさらにモチベーションが上がり、学習への意欲が増します。&lt;/p&gt;

&lt;p&gt;それだけでなく、リリースまで到達できると、アプリストアに並びちゃんとしたプロダクトに見えてさらにニヤニヤ。「インストールしたよ。」とのコメントを見て、下手な運用はできなくなったと責任感も少し芽生えます。&lt;/p&gt;

&lt;p&gt;学習して、それを後の自分のためにオンラインで記録しているだけなのに、自分の事を知る人が増え、良い情報が集ってくる流れが勝手にできていくのです。&lt;/p&gt;

&lt;p&gt;人に強制されずにものを作るのは非常に楽しいので&lt;/p&gt;
</description>
				<pubDate>Mon, 02 May 2016 00:00:00 +0900</pubDate>
				<link>http://localhost:3000//private-works/2016/05/02/the-importance-of-the-private-work/</link>
				<guid isPermaLink="true">http://localhost:3000//private-works/2016/05/02/the-importance-of-the-private-work/</guid>
				
				
					<category>private-works</category>
				
			</item>
		
			<item>
				<title>Floaty Color Clockをリリースしました。</title>
				<description>&lt;p&gt;2年前、プログラミングの勉強のために開発しはじめたものです。見てくれはなんとか公開できるレベルになりました。いやあ、長かった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://woopsdez.github.io/floaty-color-clock/&quot;&gt;Floaty color clock&lt;/a&gt;
&lt;img src=&quot;/content/images/2016/05/floaty-color-clock/fcc-screenshot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;インストール&lt;/h2&gt;
&lt;p&gt;お使いのブラウザで表示するだけです。ブラウザのスタートページに設定しておくと、ちょっと幸せになれるかも。&lt;/p&gt;

&lt;h2 id=&quot;chrome-&quot;&gt;Chrome エクステンション&lt;/h2&gt;
&lt;p&gt;Chromeをお使いの方は、こちらからでもインストールできます。
&lt;a href=&quot;https://chrome.google.com/webstore/detail/floaty-color-clock/cdcefhaockeolpljckbhklnppdppceoi&quot;&gt;Floaty Color Clock - Chrome ウェブストア&lt;/a&gt;
&lt;img src=&quot;/content/images/2016/05/floaty-color-clock/fcc-chrome-store.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;機能一覧&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;時計&lt;/li&gt;
  &lt;li&gt;指定した地域の降水確率&lt;/li&gt;
  &lt;li&gt;文字色変更&lt;/li&gt;
  &lt;li&gt;書体変更&lt;/li&gt;
  &lt;li&gt;背景色が変わる&lt;/li&gt;
  &lt;li&gt;時刻に合わせて月や太陽がのぼる&lt;/li&gt;
  &lt;li&gt;更新しても設定が保持される&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;利用シーン&lt;/h2&gt;

&lt;h3 id=&quot;section-3&quot;&gt;ネットサーフィンの合間に&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;ブラウザのスタートページに設定&lt;/li&gt;
  &lt;li&gt;新規タブを開く&lt;/li&gt;
  &lt;li&gt;時刻と天気が分かる&lt;/li&gt;
  &lt;li&gt;「あ、今日夕方から雨じゃん。早く帰ろう」&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;なかなかいい感じに機能してくれています。ただ、すぐに別のページに遷移するので、アニメーションはもっと少なくていいかも。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;壁掛け時計の代わりに&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;新居に合わせた時計を買おう&lt;/li&gt;
  &lt;li&gt;けっこう高いから買うのやめようかな&lt;/li&gt;
  &lt;li&gt;そういえば使ってないタブレットがあるじゃん&lt;/li&gt;
  &lt;li&gt;このページを設定してっと&lt;/li&gt;
  &lt;li&gt;壁に設置して&lt;/li&gt;
  &lt;li&gt;「うん、いい感じ!」&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;後者の場合、文字が小さめなので遠いところからだと見づらいこともありました。なのでスタートページに設定しておくのがちょうどいいかもですね。PCでの利用がメイン。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;名前の由来&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/05/floaty-color-clock/icon_128.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“Floaty Color”、流れるような色の変化を名前にしました。&lt;/p&gt;

&lt;p&gt;水墨画は命名後に採用となったのですが、いい具合に名前を補強してくれていますね。フリー素材に感謝です。&lt;/p&gt;

&lt;p&gt;贅沢を言うと、峠の合間にのぼる月を表現したかった。水墨画…。誰か描いてみませんか？&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;書体の追加&lt;/li&gt;
  &lt;li&gt;Google カレンダーからのスケジュールの取得、表示&lt;/li&gt;
  &lt;li&gt;ゴミの日 Notice&lt;/li&gt;
  &lt;li&gt;多言語対応&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;デバッグユーザー、コントリビューター募集&lt;/h2&gt;

&lt;p&gt;校正がザルなワタシを、しゃんとさせてくれる方が欲しいです。興味のある方はTwitterかFacebook、もしくはいきなりgithub上でプルリク送ってください。&lt;/p&gt;

&lt;p&gt;いままでいくつか小粒サービスを作ってきましたが、今回は時計という、常に表示しておくものは初めてです。&lt;/p&gt;

&lt;p&gt;気付かないうちに本番のデータを変更しちゃう…。なんてことが無いように気をつけねば。&lt;/p&gt;

&lt;p&gt;github上でやりとりができるように公開していますので、なにかおかしいところがあったりしたらissueに登録しておいてくださいね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/woopsdez/floaty-color-clock/issues/&quot;&gt;https://github.com/woopsdez/floaty-color-clock/issues/&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 01 May 2016 00:00:00 +0900</pubDate>
				<link>http://localhost:3000//private-works/2016/05/01/floatycolorclock/</link>
				<guid isPermaLink="true">http://localhost:3000//private-works/2016/05/01/floatycolorclock/</guid>
				
				
					<category>private-works</category>
				
			</item>
		
			<item>
				<title>ghostからjekyllに移行しました。</title>
				<description>&lt;p&gt;ghostはシンプルで使いやすかった。でも月1000円は高い。管理の手間はあるけれど触ってて楽しいjekyllによるセルフホスティングに移行しました。&lt;/p&gt;

&lt;div class=&quot;container&quot;&gt;
	&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;/content/images/2016/04/ghost-logos.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
	&lt;div class=&quot;reference&quot;&gt;
		&lt;strong&gt;node.jsで動くちょう今っぽいおしゃれブログプラットホーム&lt;/strong&gt;
		&lt;p&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;自分でホスティングするのが嫌。&lt;/p&gt;

&lt;p&gt;今っぽいシンプルなブログプラットホームがいい。&lt;/p&gt;

&lt;p&gt;そういう理由でghost(pro)を利用していました。しかし、&lt;strong&gt;月1000円前後でブログ1個。無料の場合はブログすら持てない。&lt;/strong&gt;というのは、ちょっとワタシには高すぎたかな。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;ブログ難民の流れ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2005年〜 Movable Type&lt;/li&gt;
  &lt;li&gt;2007年〜 WordPress&lt;/li&gt;
  &lt;li&gt;2014年〜 ghost&lt;/li&gt;
  &lt;li&gt;2016年〜 jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シンプルでおしゃれで今っぽい技術。それでいて、ほぼ無料に近いサービスというのは無いのでしょうか。&lt;/p&gt;

&lt;p&gt;いまのところはtumblrが一番良さそうですが、本腰入れて使ったことがないからなんとも言えないですね。記事のimport/exportやURLがどうなってるのかも気になるところ。&lt;/p&gt;

&lt;p&gt;それでも、いろんな可能性を考えるのが面倒になって、触ってて楽しかったjekyllでの運用となりました。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;メンテナンスを考えないですむブログ環境&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/spanner.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;書くだけに集中したいと言いつつ、おしゃれっぽさや「スゴそう感」で環境選んじゃうのでいつも苦労します。ミーハーですね。&lt;/p&gt;

&lt;p&gt;今回は「10年ほぼメンテナンスフリー」を目標に考えてみましたが、そうしたら国内の老舗サービスしか候補に残りませんでした。&lt;/p&gt;

&lt;p&gt;個人ブログくらい無責任におもしろそうな技術使いたいのでそれは断念。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;良いお勉強になった&lt;/h2&gt;

&lt;p&gt;構築にあたって、gulpとgit-hookについて勉強できました。&lt;/p&gt;

&lt;div class=&quot;container&quot;&gt;
	&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;/content/images/2016/04/gulp_logo.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
	&lt;div class=&quot;reference&quot;&gt;
		&lt;strong&gt;サイト制作中によくやるアレやコレを自動化できるヤーツ&lt;/strong&gt;
		&lt;p&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;gulpではjekyllのビルド、scssのコンパイル、ブラウザの自動リロードをしてくれる便利なnpmパッケージを使ってます。github-pageならデプロイまで簡単。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shakyShane/jekyll-gulp-sass-browser-sync&quot;&gt;jekyll-gulp-sass-browser-sync
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;あとは、ビルド時に画像をリサイズ、最適化できるようにしたいです。&lt;/p&gt;

&lt;p&gt;画像の保存場所を記事と同じディレクトリにしたいのだけど、それはどの技術でできるのかがさっぱり検討つかないのでまた今度。&lt;/p&gt;

&lt;p&gt;デプロイはgit-hookを使ってます。push時にはワークツリーのファイルを配置することができないらしく、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;受けとる場所(rep/ファイルなし、情報のみ)&lt;/li&gt;
  &lt;li&gt;ソースファイルを展開する場所(rep/ワークツリーあり)&lt;/li&gt;
  &lt;li&gt;公開用ディレクトリ(_site以下にある静的ファイル)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;と3つのディレクトリが必要になっています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/hook-memo.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2でローカルと同じソースファイルがサーバーに配置されるので、そこから_siteだけをcpで&lt;code class=&quot;highlighter-rouge&quot;&gt;public_html/blog&lt;/code&gt;にコピーしてきています。&lt;/p&gt;

&lt;p&gt;hookはpost-updateを使っています。中身はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-code&quot;&gt;# ソースファイル リポジトリへ移動してファイルを取得
cd /yourdomain.com/blog-source;
git --git-dir=.git pull origin master;

# 公開用ディレクトリのファイルを全消去して新にコピー
rm -rf /yourdomain.com/blog/*;
cp -r youdomain.com/blog-source/_site/* /yourdomain.com/blog/;

# htaccess.txtを正式な名前リネーム
mv /yourdomain.com/blog/htaccess.txt yourdomain.com/blog/.htaccess; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後のhtaccessは別に不要ですが、os xのfinderでリネームしようとすると「.(ドット)から始まるファイル名はシステムのみ」と怒られるのでこっちでやってます。&lt;/p&gt;

&lt;p&gt;ブログのメンテを行ったあとって無闇に記事を書きたくなりますよね。&lt;/p&gt;

&lt;p&gt;来年にはtumblrに移行してるかもしれませんが、ひとまずこれでよろしくお願いします。&lt;/p&gt;
</description>
				<pubDate>Tue, 05 Apr 2016 00:00:00 +0900</pubDate>
				<link>http://localhost:3000//private-works/2016/04/05/hello-jekyll/</link>
				<guid isPermaLink="true">http://localhost:3000//private-works/2016/04/05/hello-jekyll/</guid>
				
				
					<category>private-works</category>
				
			</item>
		
			<item>
				<title>帰ってから、甘いものが食べたくなってもいいようにと思ったのだ。</title>
				<description>&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.amazon.co.jp/gp/product/4167753693/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4167753693&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4167753693&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=fastfargroove-22&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;http://ir-jp.amazon-adsystem.com/e/ir?t=fastfargroove-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4167753693&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.amazon.co.jp/gp/product/B0006M197K/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B0006M197K&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B0006M197K&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=fastfargroove-22&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;http://ir-jp.amazon-adsystem.com/e/ir?t=fastfargroove-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=B0006M197K&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;
&lt;small&gt;タイトルの元ネタたち&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;このエントリは&lt;a href=&quot;http://www.adventar.org/calendars/740&quot;&gt;糖質制限 Advent Calendar&lt;/a&gt;の 4日目のエントリです。前日は Fried_GarlicHKTさんの「&lt;a href=&quot;http://hokkun-k.tumblr.com/post/134462376558/diet&quot;&gt;ダイエットにおける正反対な主張
&lt;/a&gt;」でした。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;妊娠とわたしと糖質制限&lt;/h2&gt;

&lt;p&gt;低糖質ダイエットはカロリー計算とは無縁なので、肉、魚、野菜、乳製品などは食べ放題です。要は炭水化物の摂取を減らせばいいのですね。&lt;/p&gt;

&lt;p&gt;&lt;small&gt;※わたしの場合はダイエット目的ではなく、血糖値コントロールのために実践しています。妊娠糖尿病というヤツです。&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;結果的に、赤ちゃん分の体重微増、顔肉すっきり(若干)してきたような。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;それまでのコンビニでの買い物&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;野菜生活 (200ml/糖質13.3g)&lt;/li&gt;
  &lt;li&gt;飲むヨーグルト プルーンFe (190g中/炭水化物：23.2g)&lt;/li&gt;
  &lt;li&gt;午後の紅茶 ミルクティー (100ml/炭水化物7.8g)&lt;/li&gt;
  &lt;li&gt;コンビニ弁当(ハンバーグ or パスタ or サンドイッチ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;計算が苦手なのですが、ざっくり計算して200g近い糖質を摂取していそうな感じです。これとは別にアルコールや夕食、そして間食で甘いもの。飲み物はジュースときているのですから、そりゃあかなりの糖質を1日に摂取していたのでしょう。&lt;/p&gt;

&lt;p&gt;上記のような「食事とも言えない何か」から、血糖値コントロール訓練の副産物で自炊率 70%(旦那談)になり、妊娠糖尿病発覚から約3ヶ月。少しずつ慣れてきたので「糖質制限初心者」くらいにはなったのではないでしょうか。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;甘いものが欲しい…!&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/content/images/2015/12/lowcarb-01.png&quot; alt=&quot;はじめの一歩 42巻より&quot; /&gt;&lt;/p&gt;

&lt;p&gt;はじめの一歩 42巻より&lt;/p&gt;

&lt;p&gt;減量とは違うので、ステーキなどはバリバリ食べまくるのだけれど、なによりも「甘いもの」。これが食べたくてたまらない!!!&lt;/p&gt;

&lt;p&gt;お茶がわりにジュースを飲むような食生活をしていた自分にとって、&lt;code class=&quot;highlighter-rouge&quot;&gt;主食が食べられないことよりも、甘いものが食べられないのがツラい&lt;/code&gt;と気付きました。&lt;/p&gt;

&lt;p&gt;たいして意識していなかったけど、「甘いもの」は主食以上にわたしの食生活を埋めつくしていたんですね…。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;摂取量を決めて適度なガス抜きを!&lt;/h3&gt;

&lt;p&gt;そんな時にネットで知ったのがナチュラルローソンの存在。低糖質のおやつがたくさんあるんですってよ奥さん!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://natural.lawson.co.jp/index.html&quot;&gt;&lt;img src=&quot;/content/images/2015/12/lowcarb-02.png&quot; alt=&quot;ナチュラルローソン&quot; /&gt;&lt;/a&gt;
&lt;small&gt;堕落型糖質制限者の救世主 ナチュラルローソン&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://otokono-toushitsuseigen.com/archives/407&quot;&gt;半年で15キロヤセたアラサー男のストレスフリー糖質制限&lt;/a&gt;というブログを見つけて知り、喜び勇んで最寄りのナチュローへダッシュ。紹介されている商品の一部しか揃っていませんでしたが、それでもかなり私の甘いものへの欲求を満たしてくれました。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;リピート確定、満足度の高い低糖質スイーツ&lt;/h2&gt;

&lt;h3 id=&quot;section-5&quot;&gt;グリコ “カロリーコントロールアイス” チョコバー ～ビター～&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://kenko.lawson.jp/recommend/&quot;&gt;&lt;img src=&quot;/content/images/2015/12/lowcarb-03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;チョコ感たっぷり&lt;/li&gt;
  &lt;li&gt;甘みがしっかり感じられる&lt;/li&gt;
  &lt;li&gt;量がちょうど良い&lt;/li&gt;
  &lt;li&gt;糖質が普通のラクトアイスの半分! &lt;small&gt;※ 日本食品標準成分表2010ラクトアイス(普通脂肪)と比較&lt;/small&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;食べたあとの血糖値も平均値をキープできる!!! もっ最高です!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/12/lowcarb-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;アイスって甘味も感じやすいし、特別感もあって良いガス抜きになりますね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/12/p4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ナチュラルローソンには、パンケーキやクリームサンドなどでも低糖質のものがたくさんあります。すでにたくさんのレビューがあるので、ここでの紹介は割愛いたしますが、ダイエットとして糖質制限する方もぜひ試してください。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;クリスマスケーキもあるよ&lt;/h2&gt;
&lt;p&gt;恋人や伴侶とのクリスマスにケーキがないのは絵になりませんね!!!&lt;/p&gt;

&lt;p&gt;え？ケーキはあるけど彼女がいない？うわなにするやめry&lt;/p&gt;

&lt;p&gt;かといって、相手にも我慢を強いるのも楽しさ半減です。そんなアナタにおすすめなのがローソンの低糖質ケーキ!!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.lawson.co.jp/recommend/xmas2015/img/xmascake_l19.jpg&quot; alt=&quot;ブランのガトーショコラ 5号&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5号という4-8人向けのケーキサイズで糖質が35.4gというのは非常にありがたいものです。&lt;/p&gt;

&lt;p&gt;この冬はナチュラルローソンとともに気軽に糖質制限をはじめてみては？&lt;/p&gt;
</description>
				<pubDate>Fri, 04 Dec 2015 07:59:17 +0900</pubDate>
				<link>http://localhost:3000//diary/2015/12/04/started-lowcarb-life/</link>
				<guid isPermaLink="true">http://localhost:3000//diary/2015/12/04/started-lowcarb-life/</guid>
				
				
					<category>diary</category>
				
			</item>
		
			<item>
				<title>母親になります。</title>
				<description>&lt;p&gt;日記のような取り留めのないコトを、ネット上に書くのはやめていたいのだけど、自分がいつ何をしていたかをブログによって知れるのは便利なので、開き直ることにします。&lt;/p&gt;

&lt;p&gt;来年の3月には、母親になれそうです。&lt;/p&gt;

&lt;p&gt;最初はこのような報告をネット上ですることなどに躊躇をしていました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Facebookなどのソーシャル上での妊娠報告&lt;/li&gt;
  &lt;li&gt;「お腹に赤ちゃんがいます」バッジをぶらさげること&lt;/li&gt;
  &lt;li&gt;ベビーカーを使うこと(まだ先の話)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;など、ネット上ではいくつかの批判記事があがっており、その度に反響があるのですっかり毒されてしまっていました。もちろん、妊婦だからと他者の自由を奪って良い理由はありません。しかしながら、自分で選びとった選択に対して周囲の顔色を伺う必要もないなと思っています。要は認知、寛容、バランスですね。&lt;/p&gt;

&lt;p&gt;子供をもうけようという人もいれば、それ以外の事柄を選択しようという人がいる。それだけなので。&lt;/p&gt;

&lt;p&gt;そういった当たり前を忘れて、「ああ、こんな記事もあるし、どうしようかな…。」と考えてしまった時点で染まってしまっていることに気付き、距離感を見直す意味でも妊娠期間を「デトックス」と決めました。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;生活をシンプルに&lt;/h2&gt;

&lt;p&gt;デトックスは、タンスの中はもちろん食生活や、興味の範囲、交流においても影響します。しかし「切り離す」「捨てる」などでは決っしてなく、絡まってしまった糸をほぐすように、生活をシンプルにしていく行為として行います。&lt;/p&gt;

&lt;p&gt;思えば、抱えきれないほどに背負い込んでしまった事柄が増えていき、それらを無碍に扱うなどしてしまっていたので遅すぎたのかもしれません。あらためて、自分の許容量の少なさに驚いています。&lt;/p&gt;

&lt;p&gt;仕事と決断、行動の速さには自信がありましたが、それらは人が普通に行っているたくさんの事柄を無視して、注力してきた結果でしかないのかも。とも思いはじめました。そりゃ、人より寝るのが遅くて、家のことをロクにせず仕事にかまけていれば、時間も多くとれるよね。と。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;2015年 32歳 厄年の心持ち&lt;/h2&gt;

&lt;p&gt;占い好きの私は、まだ数年続く厄年に諦めて、「仕事量を調整し、勉学に励む年」と2015年を定義していました。そういったスピリチュアルな業界では、なぜか子供を授かると厄年から開放されるという言い伝え？があります。&lt;/p&gt;

&lt;p&gt;仕事量も調節しているし、年齢的にも、経済的にも十分かなと思い母親になる決意を固めました。&lt;/p&gt;

&lt;p&gt;うちの役員から、「子作りは二年みた方がいい」と聞いていたのでのんびりすすめる感じで計画しました。
タイミング法を用いたらすんなりと妊娠してしまったので驚いていますが。&lt;/p&gt;

&lt;p&gt;妊娠発覚時点で早々に産休をとり、環境を自分で選べています。過去の私や支えてくれた人々のおかげです。多方面へ迷惑をかけるカタチとなってしまいましたが、妊娠初期にとって非常にありがたかったです。おもにつわりなどの理由で。皆さん、ありがとうございます。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;改善された生活とは&lt;/h2&gt;

&lt;p&gt;非常に当たり前のことで恥ずかしいのですが、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;早寝早起き&lt;/li&gt;
  &lt;li&gt;三食の食事&lt;/li&gt;
  &lt;li&gt;家事、炊事&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が、ちゃんとできるようになりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/11/IMG_0094.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;三食中お昼のみは外食です。三食、家で食べていると旦那さんと二人ずっとひきこもっているようで鬱屈するので。おかげでいま、すごく肌がキレイです。旦那さんはお通じもよくなりました。いいね。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;でも、一体いつ仕事するんだ&lt;/h2&gt;
&lt;p&gt;ただ、少し仕事をしただけであっという間に１日が終わってしまいます。
これだけの時間のなかで頭脳労働に切り替えたり、費す時間が確保するのが難しいです。&lt;/p&gt;

&lt;p&gt;他の方々は、それを実践していたのですね。本当にすごい。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;独身時代からの「仕事」に対する意識変化&lt;/h2&gt;

&lt;p&gt;そういった状況も手伝って、わたしの中で仕事に対する重要度が変わりました。以前から仕事は「人生の暇潰し」という、いい加減な思想を持っていましたが、もう少し具体的というか、実感がこもりました。&lt;/p&gt;

&lt;p&gt;家族(家のこと)という新な柱が出現したのです。&lt;/p&gt;

&lt;p&gt;独身時代の私は、仕事をして、自分のごはんを食べられていればそれは大人だし、それで完結するものと思っていました。しかし、「家族のことを考える」というテーマもあったのですね。&lt;/p&gt;

&lt;p&gt;知ってはいたかもですが、自分が本当にそれをするとは、どうしても思えていなかったです。他の人はするかもしれないが、自分はしないと思っていたような。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自分 (人生観、生き方、知識などの内面のこと)&lt;/li&gt;
  &lt;li&gt;仕事 (経済、社会、他者のとの交流も含めた外面のこと)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NEW!→&lt;/code&gt; 家族(最も小さな社会、自分と、自分と似ているが異なる他者との交流。内と外の間。皮のようなもの)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;32歳という、自分の生活ルールや環境が定まって安定しはじめた「今」になって、また新しい刺激、テーマが立ちふさがったのです。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;年代それぞれのテーマ&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;10代には「社会での協調」を学び&lt;/li&gt;
  &lt;li&gt;20代では「社会での自立」を学び&lt;/li&gt;
  &lt;li&gt;30代でようやく「自分を見つめる」ことができる。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;そのように思っていましたが、30代で見つめる「自分」という範囲は思ったよりも広いものでした。夫、子供。物理的に1人じゃないんですね。ああ、びっくり。&lt;/p&gt;

&lt;p&gt;「自分でもある他者」のような、でもやっぱり「他者」。
境界線がヒドく曖昧な、自分のパーソナルスペースに入っていることが当たり前の「他者」。&lt;/p&gt;

&lt;p&gt;「ああ、『大人』というのは自分自身のこと以外も気にかけられる人のことなのだな。」と自分の幼なさに気付かされます。&lt;/p&gt;

&lt;p&gt;それに気付くことができたのも、妊娠がいいきっかけになりました。きっと、そうでなくても気付くことはできたのでしょうが、私にとってはこのタイミングだったようです。&lt;/p&gt;

&lt;p&gt;これまで同業の人とばかり交流していたので、産婦人科をはじめとする違う職業、価値観の人々の中に入って見回すのは刺激的ですね。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;近況&lt;/h2&gt;

&lt;p&gt;おっと、開き直ったらとりとめのない話ばかり書いてしまいました。&lt;/p&gt;

&lt;p&gt;最後は、のちの自分が楽しめるように近況を書いて終わりにします。数年後に見返して、同じテーマに対してまた全然違う印象を持っているかもしれないと思うと楽しみ。&lt;/p&gt;

&lt;p&gt;最近は20週に入り、性別が分かりました。胎児のときの愛称を決めたときから漠然と思っていましたが、できたら欲しいなと思っていた性別の子でとってもうれしいです。思い通りには育たないとは思いつつも、やはり人間として自分も尊敬できるような芯のしっかりした人になって欲しいなと考えてしまいます。&lt;/p&gt;

&lt;p&gt;お腹を蹴ったり動くようになり、キックゲームというのをはじめました。赤ちゃんが蹴った場所を「キック!」といいながら軽く叩き返すものです。実際に蹴りの回数が増えた感じがします。&lt;/p&gt;

&lt;p&gt;そのうち、こちらからキックを求めたり、回数を指定できるようにもなるらしいので楽しみ。&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;分かりあえない心地良さ&lt;/h2&gt;

&lt;p&gt;言葉が通じないのが分かった上でとるコミュニケーションというのは「分かりあえない前提」があるからか、より優しくなれる気がします。&lt;/p&gt;

&lt;p&gt;一方通行であり、思い込みでしかなく、ひいては傲慢さにも繋るとは思うのですが、「分かりあえるのが当たり前」と思っている状態よりは幸せかなと。微妙に一致しなかったり、分かりあえない時の感情のゆらぎが激しいですからね。とくに恋愛においては。少女漫画やステキな漫画と現実の区別がつかなくて陥りがちでした。&lt;/p&gt;

&lt;p&gt;良い意味で「期待しない」のはお互いに寛容になれるのでわたしは好きです。&lt;/p&gt;

&lt;p&gt;生まれてしばらくたったら「通じるのに、通じないコミュニケーション」をしていくのですよね。たぶんその時にもまた何かおもしろい発見があるのでしょう。不安でもあるけど楽しみです。&lt;/p&gt;

&lt;p&gt;元気な子が生まれますように。&lt;/p&gt;
</description>
				<pubDate>Sun, 01 Nov 2015 07:59:50 +0900</pubDate>
				<link>http://localhost:3000//diary/2015/11/01/become-the-mother01/</link>
				<guid isPermaLink="true">http://localhost:3000//diary/2015/11/01/become-the-mother01/</guid>
				
				
					<category>diary</category>
				
			</item>
		
			<item>
				<title>ライブラリを作る事でプログラミングスキルは本当に向上するのか。</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://blog.mikiishijima.com/start-programing/&quot;&gt;デザイナーのわたしがプログラムの基礎をだいたい3日で覚えた1つの方法&lt;/a&gt;で、Minecraftとプラグインを使ってのプログラミングの楽しさについて書きました。&lt;/p&gt;

&lt;p&gt;あれから、いまだに飽きもせず休みの日などにコードを書いています。&lt;/p&gt;

&lt;p&gt;まだまだ微妙なこともあるのですが、いくつかプログラムを作ってみて良く使う機能をライブラリにしておきたいなと思ったので作ってみました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-11-35.png&quot; alt=&quot;&quot; /&gt;
&lt;a href=&quot;https://github.com/woopsdez/ComputerCraft&quot;&gt;woopsdez/ComputerCraft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;他の人にも使ってもらえるといいな。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;ライブラリ作成の実際の流れ&lt;/h2&gt;

&lt;p&gt;いきなり作るのは無理でした。何が良く使うものなのか、汎用性を高められそうなコードはどれか。などを最初から考えるのはわたしには難しいです。&lt;/p&gt;

&lt;p&gt;けっきょくは&lt;/p&gt;

&lt;p&gt;1.作りたいプログラムをいくつか書く。
2.良く使うものをピックアップ
3.ライブラリにコピペ
4.変数や値を置き換え
5.作ったプログラムに逆輸入
6.動作確認&lt;/p&gt;

&lt;p&gt;と、いう流れになりました。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;プログラム力は向上するのか&lt;/h2&gt;

&lt;p&gt;答えはイエスです。&lt;/p&gt;

&lt;p&gt;実際、本当に初心者ですし設計の考え方もうまくはありません。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;もっと分かりやすい名前にできないか&lt;/li&gt;
  &lt;li&gt;どのようにコメントをいれていけば他者が分かるコードになるのか&lt;/li&gt;
  &lt;li&gt;決め打ちで書いていた部分を引数で処理できるようにできないか&lt;/li&gt;
  &lt;li&gt;同じような処理をひとつの関数でまとめられないか&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;を強く意識するようになりました。&lt;/p&gt;

&lt;p&gt;ひとりで使うコードであれば、その場で動けば良いのでかなり汚いです。
何回も書いていると、ここはライブラリに実装してしまった方が「自分が」ラクになるので、良く使うものをまとめだします。&lt;/p&gt;

&lt;p&gt;一度自分の書いたコードの読みづらさを感じると、次に書くときにはもっとキレイに書けるように。&lt;/p&gt;

&lt;p&gt;こんなサイクルが回り出します。
プログラムをたくさん書いていけば自ずと上がるものだと思いますが、何度も使えるようにライブラリ化する。というサブクエストのおかげで、漫然とコードを書くことが少なくなったように思います。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;もっと分かりやすい名前にできないか&lt;/h2&gt;

&lt;p&gt;例えばx,y,zなんかの変数は良く使うだけに被りやすいです。関数もいくつも定義しているとあっという間にボキャブラリを使いつくしてしまいます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-18-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;placeTourchという「松明を一定感覚に置く」という処理の関数でした。実際は松明じゃなくてもアイテムなら他のも置けるので、placeItemに変更してみたり。&lt;/p&gt;

&lt;p&gt;変数に名詞を使うようにしたのですが、これはこれで長くなると面倒ですし…。
一文字で良い変数と、ちゃんと分かりやすい名前にしておいた方が良い変数。&lt;/p&gt;

&lt;p&gt;スコープが小さい場合には、短くて使いやすい変数の方が良く、逆にいろんな箇所で参照されるような変数は長くても分かりやすい名前の方が安全でしょう。&lt;/p&gt;

&lt;p&gt;まだまだ「出来る！」というレベルには及ばないけど、なるべくそれに沿う努力ができるようになりました。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h6 id=&quot;section-3&quot;&gt;スコープ&lt;/h6&gt;
  &lt;p&gt;変数や関数が参照される範囲のこと。
何も考えずに変数を定義したり、いろんなところで使っちゃうと、思わぬところで書き変わってたりしてバグのもとになりますよ！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-4&quot;&gt;どのようにコメントをいれていけば他者が分かるコードになるのか&lt;/h2&gt;

&lt;p&gt;HTMLは見ればなんとなく分かることが多いと思いますが、CSSや他のプログラム言語だと、変数を初期化して、関数を定義して、実行部分が〜と書いたりする必要がでてきます。(全ての言語ではありませんが)&lt;/p&gt;

&lt;p&gt;実行部分で関数を呼び出していると、どの関数か見るためにスクロールを繰り返すのもちょっと面倒ですよね。&lt;/p&gt;

&lt;p&gt;また、定義された関数を上から読んでいくのも疲れます。&lt;/p&gt;

&lt;p&gt;ですので、なるべく「これはどんな処理をしているのか」が分かるようなコメントがあると分かりやすいなぁと思いました。&lt;/p&gt;

&lt;p&gt;CSSのフレームワークであるBootstrapなどは丁寧にコメントされていて、何故そのコードが定義されているかが分かりやすいので、カスタマイズも容易ですしドキュメントを読まずとも理解することができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-18-59.png&quot; alt=&quot;&quot; /&gt;
コメントが丁寧なので、ドキュメントなしでも意図が分かる。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;決め打ちで書いていた部分を引数で処理できるようにできないか&lt;/h2&gt;

&lt;p&gt;繰り返す回数や、関数内で処理する変数、ComputerCraftで言えば操作する向きなど、そういったものを決め打ちで入れていた箇所が変わっても動くようにするのはとても面白かったです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-17-40-1.png&quot; alt=&quot;&quot; /&gt;
左はチェストを置いてアイテムを格納する処理。右側は汎用性を持たせるため、アイテムを収納する部分だけを抜き出して関数にしたもの。forで繰り返す回数や、turtle.dropDownなどで決定されるアイテムを落とす方向を引数で処理できるようにしている。&lt;/p&gt;

&lt;p&gt;みるみる便利になりますし、ライブラリとして別ファイルに移設すると、アプリケーション本体が非常にスリムになっていきます。&lt;/p&gt;

&lt;p&gt;そういった様子を見るとキレイにコードが書けた気がして一番楽しかったです。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;同じような処理をひとつの関数でまとめられないか&lt;/h2&gt;

&lt;p&gt;例えば、前を向いてアイテムを回収する処理。上を向く場合、下を向く場合で関数を3つ作っていました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-21-22.png&quot; alt=&quot;&quot; /&gt;
左側が古い方、方向によって3つの関数が定義されている。右側のように引数で方向を渡し、文字列で結合するようにして、テーブルのキーとして渡すことでひとつの関数で処理するようにしている。&lt;/p&gt;

&lt;p&gt;プログラムの師匠に教わりLuaのテーブルが少しだけ分かったので、これもひとつの関数でまとめられるようになりました。&lt;/p&gt;

&lt;p&gt;これがもう大活躍で、多くの処理がこれでまとめられるようになり、一気にスリム化することができました。&lt;/p&gt;

&lt;h2 id=&quot;read-me&quot;&gt;Read Meを書くってカッコいい！&lt;/h2&gt;

&lt;p&gt;githubなどで良く見るreadme.mdown。自分でも書くときが来るなんて！とちょっとワクワクしました。&lt;/p&gt;

&lt;h3 id=&quot;change-log&quot;&gt;change logの重要性&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-22-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;いままでは、見向きもしていなかったchage logですが、何が変わったのかはスゴく重要ですよね。例えば以前から使っていた関数名が変更になったり、処理の仕方が変わったりしていたら。&lt;/p&gt;

&lt;p&gt;そんなときに必要なんだと、作ってみるまで分からなかったです。(そういう使い方しかしていなかった自分がアレなんですが…。)&lt;/p&gt;

&lt;p&gt;コミットログを抜き出して整形したり編集して、change logをカンタンに作れるものってないのでしょうか？&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;バージョンの付け方&lt;/h3&gt;

&lt;p&gt;同時にバージョンの付け方も勉強になりました。0.0.0みたいなカタチ。多いですよね。&lt;/p&gt;

&lt;p&gt;あれは、左からメジャーアップデート、新機能追加、それ以外の細かいアップデートなんだそうです。これって常識だったのかしら…。&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;長くなっちゃった…。&lt;/h3&gt;

&lt;p&gt;解説やサンプルコードを入れたり、上記のchange log、さらに付属ファイルの使い方なども入れていくとread meが膨大になっていきます。誰も読まないのでは？というレベルです。&lt;/p&gt;

&lt;p&gt;ここまでくると、それっぽいサイトのひとつでも作った方がいいのでしょうか？&lt;/p&gt;

&lt;h2 id=&quot;section-9&quot;&gt;最後に&lt;/h2&gt;

&lt;p&gt;今回はMinecraftというゲームのMOD(プラグインのようなもの)のライブラリでしたので、国内では非常に少なく作る意義のあるものだった。というのは非常についていたなと思います。&lt;/p&gt;

&lt;p&gt;jsなどの言語だとあらかたあって、何を作ったらいいのやら？となりそうですもんね。&lt;/p&gt;

&lt;p&gt;ただjQueryプラグイン系も非常に似たカタチで実装するものですので、良く使うのだけれど決定版がない！というものは実装してみると面白いかもしれません。&lt;/p&gt;

&lt;p&gt;ぜひ、一緒にMinecraftやりましょー！！！&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;http://ext.nicovideo.jp/thumb_watch/sm23969139?w=490&amp;amp;h=307&quot;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;a href=&quot;http://www.nicovideo.jp/watch/sm23969139&quot;&gt;【ニコニコ動画】【Minecraft】タートルとごはん Part10【ゆっくり実況】&lt;/a&gt;&lt;/noscript&gt;
</description>
				<pubDate>Thu, 24 Jul 2014 12:50:47 +0900</pubDate>
				<link>http://localhost:3000//private-works/2014/07/24/my-first-library/</link>
				<guid isPermaLink="true">http://localhost:3000//private-works/2014/07/24/my-first-library/</guid>
				
				
					<category>private-works</category>
				
			</item>
		
			<item>
				<title>markdownでプレゼンしたい！</title>
				<description>&lt;p&gt;プレゼンをしている方は皆思うのではないでしょうか。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;「今書いてるプロット、そのままスライドにならないかな…」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;「凝らなくていいから、それらしく見えればありがたい」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;話している内容に注力したいのに、スライド作りに疲れている亡者たちが見えるようです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;プロットをそのままスライドにしたい、でもそこそこおしゃれにしたい！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;そんな願いを叶えるのがDecksetです！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-34-11.png&quot; alt=&quot;http://www.decksetapp.com/&quot; /&gt;&lt;/p&gt;

&lt;p&gt;App storeで2000円くらい。&lt;/p&gt;

&lt;h3 id=&quot;markdown&quot;&gt;1. markdownファイルをこのくらいの見た目にしてくれる&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-0-35-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;2. テンプレートも選べるよ！&lt;/h3&gt;
&lt;p&gt;色もいくつか用意されてるしね！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-1-36-46.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;4. 背景に画像を入れられる&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-1-37-34.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![](filename.jpg)&lt;/code&gt;で画像を入れられます。文字を乗せたら自動的にぼけます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![right](plant.jpg)&lt;/code&gt;これで右側における。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;こんだけできたらけっこうアリじゃない？&lt;/h2&gt;

&lt;p&gt;テーマを自分で作れたり、複数テーマを混在させられたらかなり使い勝手も良くなりそうですね。&lt;/p&gt;

&lt;p&gt;がががっとやりたいLTなんかで活用できそうです。&lt;/p&gt;

&lt;h2 id=&quot;remake&quot;&gt;オマケ remakeもあるよ&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/ishijima_-2015-03-10-1-38-42.png&quot; alt=&quot;http://remarkjs.com/&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://remarkjs.com/#1&quot;&gt;Remark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;こっちもマークダウンをスライドにしてくれるものです。ブラウザベース。ページごとのスタイルを調整できたり、テーマ自体をCSSでかけたり。自由度は高いです。&lt;/p&gt;

&lt;p&gt;なにかの参考になればー。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/gp/product/B00IWM8VBS/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00IWM8VBS&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00IWM8VBS&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=fastfargroove-22&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;http://ir-jp.amazon-adsystem.com/e/ir?t=fastfargroove-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=B00IWM8VBS&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 20 Jun 2014 09:11:01 +0900</pubDate>
				<link>http://localhost:3000//review/2014/06/20/markdown-plesentation/</link>
				<guid isPermaLink="true">http://localhost:3000//review/2014/06/20/markdown-plesentation/</guid>
				
				
					<category>review</category>
				
			</item>
		
			<item>
				<title>dist.3 Photoshop and me に登壇しました</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://http://dist.connpass.com/event/6385/&quot;&gt;dist.3 Photoshop and me&lt;/a&gt;にてお話させていただきました。&lt;/p&gt;

&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/36100312&quot; width=&quot;597&quot; height=&quot;486&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;a href=&quot;https://www.slideshare.net/woopsdez/dist3&quot; title=&quot;それでもPhotoshopを選ぶ？ in Dist3&quot; target=&quot;_blank&quot;&gt;それでもPhotoshopを選ぶ？ in Dist3&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/woopsdez&quot; target=&quot;_blank&quot;&gt;イシジマミキ&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Photoshopをテーマに、というコトだったのですが、最近めっきり触れる機会が減りました。コーディングしていたり検証したり、これでいいのか考えたりしているばかりです。&lt;/p&gt;

&lt;p&gt;元々グラフィックデザイナーだった自分がWebの現場において、たくさん変化してきたのだから、もっとWebに注力している人はわたしなどより感じていると思います。&lt;/p&gt;

&lt;p&gt;グラフィックは美しいのは当たり前で、それと同時に実現性があるかも評価されるようになったのですよね。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;自分はどうやって生きていきたいの？&lt;/h2&gt;

&lt;p&gt;Photoshopを投げすてろ。という話ではありません。自分がWebというチャネルにおいてどこを目指したいかの話なのです。&lt;/p&gt;

&lt;p&gt;「それでもPhotoshop？」というタイトルは、参加者に自分の根幹を見つめる機会を促しているのです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;イベントで話をきいて「もっと頑張ろう」とか「プログラム覚えないと」とやみくもに思ってしまうのは大きな間違いです。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;こういった潮流がでてきている上で、自分はどんな道を行くのか。を考える機会にした方が良く、そこが明確じゃないと、いろんな人の話に触発されるたびに頑張ることになって、けっきょく何をしていいか分からなくなるという堂々めぐりに陥いってしまう。&lt;/p&gt;

&lt;p&gt;煽り気味なメッセージを投げかけることで、参加者にそういった気付きを与える意図があった、と、言う話を今考えました。&lt;/p&gt;

&lt;p&gt;真に受けるも受けないもアナタ次第！&lt;/p&gt;

&lt;p&gt;お目汚し失礼しましたー。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/gp/product/4532168139/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4532168139&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4532168139&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=fastfargroove-22&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;http://ir-jp.amazon-adsystem.com/e/ir?t=fastfargroove-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4532168139&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 20 Jun 2014 08:19:18 +0900</pubDate>
				<link>http://localhost:3000//works/2014/06/20/dist3-photoshopandme/</link>
				<guid isPermaLink="true">http://localhost:3000//works/2014/06/20/dist3-photoshopandme/</guid>
				
				
					<category>works</category>
				
			</item>
		
			<item>
				<title>Sketchの使い方をお話ししてきました。</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://cssnite.jp/afterdark/cpi/vol11/&quot;&gt;CPI x CSS Nite x 優クリエイト「After Dark」（11）&lt;/a&gt;にてSketchの基本的な使い方についてお話してきました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2015/03/20140619_af11_0024_.jpg&quot; alt=&quot;&quot; /&gt;
準備中の様子&lt;/p&gt;

&lt;p&gt;題して「&lt;strong&gt;&lt;a href=&quot;http://cssnite.jp/afterdark/cpi/vol11/&quot;&gt;ワイヤーフレーム・プロトタイプ制作に使うSketch&lt;/a&gt;&lt;/strong&gt;」です。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Adobe Fireworksの新規開発中止をうけて注目を集めたSketch。実はWebページやアプリのUIデザインに最適化されたベクタードローイングツールとして有名です。そのSketchがバージョン3になり、さらに使いやすく大幅に機能強化されました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;本セッションでは、Sketchの基本からWebサイトのワイヤーフレームをスムーズに作る方法を紹介します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と、言うような内容でワイヤーフレームなど軽量なものを作るのに、Sketchはおすすめだよー。というコトをデモを交えて解説しました。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;話した内容からちょっとプラスα&lt;/h2&gt;

&lt;p&gt;ちょっとこぼれてしまった話として、iOSのmockupはテンプレートとして最初から準備されています。&lt;/p&gt;

&lt;iframe name=&quot;quickcast&quot; src=&quot;http://quick.as/embed/lxvgi8e8&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;script src=&quot;http://quick.as/embed/script/1.60&quot;&gt;&lt;/script&gt;

&lt;p&gt;上記のようにそれらを組み合わせれば、簡単に再現したいイメージを作れますね。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ワイヤーフレームなど、「ちょっと作りたい」というときに使えるツールとしてさまざまなものがありますが今のところSketchで決定したというのが自分の所感です。&lt;/p&gt;

&lt;p&gt;Cacooなどは共有や議論がしやすいメリットがありますし、OmniGraffleも高機能でさまざまなことができます。&lt;/p&gt;

&lt;p&gt;そこでKeynoteに非常に近しい感触であり、さらにAI,PSに関連するような機能が用意されているというのはポイント高しです。&lt;/p&gt;

&lt;p&gt;ニコニコ動画でいくつか動画を投稿しているのですが、それほどデザインに凝っている訳でもないスチルなどはSketchで作っています。&lt;/p&gt;

&lt;p&gt;イベントでお話されていたFramer.jsで、動くモックアップを作るキレイな流れもできているのでこの機会に覚えてみてはいかがでしょうか！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/gp/product/4844335375/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4844335375&amp;amp;linkCode=as2&amp;amp;tag=fastfargroove-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4844335375&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=fastfargroove-22&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;http://ir-jp.amazon-adsystem.com/e/ir?t=fastfargroove-22&amp;amp;l=as2&amp;amp;o=9&amp;amp;a=4844335375&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 20 Jun 2014 07:46:06 +0900</pubDate>
				<link>http://localhost:3000//works/2014/06/20/talk-about-sketch-afterdark/</link>
				<guid isPermaLink="true">http://localhost:3000//works/2014/06/20/talk-about-sketch-afterdark/</guid>
				
				
					<category>works</category>
				
			</item>
		
	</channel>
</rss>
